plugins {
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"

    id "com.palantir.git-version" version "0.12.0-rc2"
    id "com.gorylenko.gradle-git-properties" version "2.0.0"
    id "com.ofg.uptodate" version "1.6.3"
    id "com.github.ben-manes.versions" version "0.21.0"
}


version gitVersion()
group "demo.mn"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.2'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-server-netty"
    compileOnly "com.oracle.substratevm:svm"

    runtime "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "demo.mn.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}


shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
